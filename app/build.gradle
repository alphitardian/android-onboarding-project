plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'kotlinx-serialization'
    id 'jacoco'
}

jacoco {
    toolVersion = "0.8.7"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('keystore.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def version = [ major: 1, minor: 0, patch: 0 ]
def buildVersionCode = version.major * 100 + version.minor * 10 + version.patch
def buildVersionName = version.major + "." + version.minor + "." + version.patch

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.alphitardian.onboardingproject"
        minSdk 22
        targetSdk 30
        versionCode buildVersionCode
        versionName buildVersionName

        buildConfigField("String", "BASE_URL", BASE_URL)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard/retrofit.pro'
        }
        debug {
            testCoverageEnabled true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    testOptions {
        animationsDisabled true
        unitTests.includeAndroidResources = true
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                excludes = [
                        'jdk.internal.*',
                ]
            }
        }
        unitTests.returnDefaultValues = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.5.21'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

configurations.all {
    resolutionStrategy {
        eachDependency { details ->
            if ('org.jacoco' == details.requested.group) {
                details.useVersion "0.8.7"
            }
        }
    }
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', 'dagger/**']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories.from(files([mainSrc]))
    classDirectories.from(files([debugTree]))
    executionData.from = files([
            "$project.projectDir/jacoco.exec",
            fileTree(dir: project.buildDir, includes: [
                    "outputs/code_coverage/debugAndroidTest/connected/**/*.ec"
            ])
    ])

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    '**/*_Provide*/**',
                    '**/*_Factory*/**',
                    '**/*_MembersInjector.class',
                    '**/Dagger*',
                    '**/Hilt_*'
            ])
        }))
    }
}

dependencies {
    implementation 'androidx.test:core-ktx:1.4.0'


    // Unit Test
    testImplementation 'junit:junit:4.+'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation 'org.mockito:mockito-inline:3.12.4'
    testImplementation "com.squareup.okhttp3:mockwebserver:4.9.1"
    testImplementation 'org.robolectric:robolectric:4.6'
    testImplementation "androidx.arch.core:core-testing:2.1.0"

    // UI Test
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    implementation 'androidx.test.espresso:espresso-idling-resource:3.4.0'

    // Android libs
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.4.0-rc01'
    implementation 'androidx.room:room-runtime:2.3.0'
    kapt 'androidx.room:room-compiler:2.3.0'
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0"
    implementation 'androidx.datastore:datastore-preferences:1.0.0'
    implementation "androidx.datastore:datastore:1.0.0"

    // Navigation
    implementation "androidx.navigation:navigation-compose:2.4.0-beta02"
    implementation "com.google.accompanist:accompanist-navigation-animation:0.21.2-beta"

    // Dagger Hilt
    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-android-compiler:2.37"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt "androidx.hilt:hilt-compiler:1.0.0"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0-alpha03'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.0'

    // Image Loader
    implementation "io.coil-kt:coil-compose:1.3.2"
    implementation "com.github.skydoves:landscapist-glide:1.3.9"
}